#include <iostream>
#include <conio.h>
using namespace std;
struct tovar//структура для партии
{
    int prise;//цена за товар
    int kolvo;//количество товара в партии
    tovar* next;//ссылка на следующий элемент очереди
};

struct head//структура для ссылки на 1 элемент очереди
{
    tovar* head;
};
void inithead(head* Node)//обнуление головы
{
    Node->head = NULL;
}
void schet(head* Node)//подсчёт товара на складе
{
    int tovara = 0;
    tovar* shet = new tovar();
    shet = Node->head;
    while (shet)//пока shet есть идёт подсчёт
    {
        tovara += shet->kolvo;//прибавка к выводимому числу
        shet = shet->next;//переход на следующий элемент
    }
    cout <<"Товара на складе : " <<tovara <<endl;//вывод количества товара на экран
}

void addtovar(int prise, int kolvo, head* Node)//добавление товара в очередь
{

    if (Node->head)//проверяем первый ли это элемент
    {//если не первый 
        tovar* tail = new tovar();
        tail = Node->head;
        while (tail->next)//переходим к последнему элементу очереди
        {
            tail = tail->next;
        }
        tovar* newtovar = new tovar();//создаём новый товар и заполняем его
        newtovar->prise = prise;
        newtovar->kolvo = kolvo;
        newtovar->next = NULL;
        tail->next = newtovar;//настраиваем связи

    }
    else//если он первый
    {
        tovar* newtovar = new tovar();//создаём новый товар и заполняем его
        newtovar->prise = prise;
        newtovar->kolvo = kolvo;
        newtovar->next = NULL;
        Node->head = newtovar;//присваиваем адрес головы к новому элементу
    }
}

void printList(int f, head* Node)//вывод проданного товара
{
    tovar* tov = Node->head;
    if (f > tov->kolvo)//если количество запрошенного товара превышает количество находящиеся в первом элементе, то тогда выводиться количество товара в первом элементе
        cout << "Продано " << tov->kolvo << " штук по цене " << tov->prise * 1.2 << " на сумму " << tov->prise * 1.2 * tov->kolvo << endl;
    else
        cout << "Продано " << f << " штук по цене " << tov->prise * 1.2 << " на сумму " << tov->prise * 1.2 * f << endl;//если количество запрошенного товара не превышает количество 1 элемента тогда подаётся переменная f
}

void DeleteList(int f, head* Node)//удаление элемента из начала очереди
{
    tovar* spisok = Node->head;
    if (spisok) {//если есть элементы в очереди
        if (f >= spisok->kolvo)//проверка является ли запрошенное число больше количества имеющегося в первом элементе
        {
            printList(f, Node);//вывод проданного товара
            if (spisok->next)//если элемент в списке не 1
            {
                f = f - spisok->kolvo;//уменьшение требуемого товара на количество в 1 элементе очереди
                tovar* newHead = spisok->next;//подготовка к смене головы очереди
                delete spisok;//удаление 1 элемента
                Node->head = newHead;//присвоение новой головы
                if (f != 0)//проверяем не весь ли требуемый товар продан
                    DeleteList(f, Node);//если требования не выполнены то функция входит в рекурсию с изменённой переменной

            }
            else//если элемент в списке не один
            {
                if (f != spisok->kolvo)//проверка не равно ли требуемое количество количеству товара в 1 элементы очереди
                {
                    int x = f - spisok->kolvo;//вычисляем оставшиеся количество товара которой 
                    inithead(Node);//обнуление головы
                    delete spisok;//удаление 1 элемента в списке 
                    DeleteList(x, Node);//переход в рекурсию с дальнейшим выводом недостающих элементов
                }
                else//если в первом элементе ровно столько же элементов сколько требуется
                {
                    inithead(Node);//обнуляем голову
                    delete spisok;//удаляем первый элемент очереди
                }
            }

        }
        else//если в первом элементе больше товара чем требуется
        {
            printList(f, Node);//вывод проданного товара
            tovar* tov = Node->head;
            tov->kolvo = tov->kolvo - f;//уменьшение количество доступного товара в 1 элементе очереди
        }
    }
    else//если нет элементов в очереди
        cout << f << " единиц товара отсутствует на складе" << endl;
};

void delall(head* Node)//очищение памяти
{
    tovar* head = Node->head;
    if (Node->head)//если есть элементы в очереди
    {
        while (head->next)//пока есть следующий элемент
        {
            tovar* newHead = head->next;//подготовка к смене головы очереди
            delete head;//удаление 1 элемента очереди
            head = newHead;//присвоение новой головы
        }
        delete head;//удаляем первый элемент
    }
}
int main()
{

    setlocale(LC_ALL, "Russian");//подключаем для работы на русском языке
    head organ;//создаём структуру головы
    inithead(&organ);//обнуляем голову
    int f, d, g = 1;//создаём элементы для дальнейшей работы
    char a;//подготовка к основному циклу программы
    cout << "Фирма начала работу введите желаемое действие S продажа товара R покупка" << endl;//
    while (g != 0)//пока не введётся что-то кроме 's','S' или 'r','R'
    {
        a = _getch();//поучение сигнала с клавиатуры и присвоение значения переменной
        switch (tolower(a))//обработка случая с вводом с 'r','s' и другого значения поступающая переменная проходит перевод из заглавных букв в строчные
        {
        case('r'): {//если введён 'r'
            cout << "введите количество купленного товара и цену" << endl;
            cout << "Количество товара: ";
            cin >> f;//ввод количества товара в партии
            cout << "Цена товара: ";
            cin >> d; //ввод цены за единицу товара
            addtovar(d, f, &organ);//добавление в конец очереди товара
            schet(&organ);//вывод количества товара на складе
            cout << "Фирма продолжает работу введите желаемое действие S продажа товара R продажа" << endl;
            continue;//продолжаем цикл
        }
        case('s'): {//если введён 's'
            cout << "введите количество запрашиваемого товара" << endl;
            cout << "Товара запрошено: ";
            cin >> f;//ввод количество продаваемого товара
            DeleteList(f, &organ);//удаление нужного количества товара из очереди
            schet(&organ);//вывод количества товара на складе
            cout << "Фирма продолжает работу введите желаемое действие S продажа товара R продажа" << endl;//
            continue;//продолжаем цикл
        }
        default:g = 0;//изменение переменной и завершение цикла
            break;
        }
    }
    cout << "Фирма закончила работу";
    delall(&organ);//освобождение памяти
    return 0;
}
